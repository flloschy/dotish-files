# window ---
    bind = $mod, C, killactive,
    bind = $mod, F, togglefloating,

    bindm = $mod, mouse:272, movewindow
    bindm = $mod, mouse:273, resizewindow

    binde = $mod, left, movefocus, l
    binde = $mod, right, movefocus, r
    binde = $mod, up, movefocus, u
    binde = $mod, down, movefocus, d


# audio ---
    # global volume ct
    bindel = ,XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle && notify-send -t 1000 "Volume" "$(pactl get-sink-mute @DEFAULT_SINK@)"
    bindel = ,XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +1% && notify-send -t 250 "Volume" "$(pactl get-sink-volume @DEFAULT_SINK@ | grep -e "[0-9]*%" -o | head -1)"
    bindel = ,XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -1% && notify-send -t 250 "Volume" "$(pactl get-sink-volume @DEFAULT_SINK@ | grep -e "[0-9]*%" -o | head -1)"

    # application volume ctl
    bindel = Alt, XF86AudioMute, exec, wpctl set-mute -p $(hyprctl activewindow -j | jq -r '.pid') toggle
    bindel = Alt, XF86AudioRaiseVolume, exec, wpctl set-volume -p $(hyprctl activewindow -j | jq -r '.pid') 10%+
    bindel = Alt, XF86AudioLowerVolume, exec, wpctl set-volume -p $(hyprctl activewindow -j | jq -r '.pid') 10%-

    # mic volume ctl
    bindel = SHIFT, XF86AudioMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send -t 1000 "Mic" "$(pactl get-source-mute @DEFAULT_SOURCE@)"
    bindel = SHIFT, XF86AudioRaiseVolume, exec, pactl set-source-volume @DEFAULT_SOURCE@ +5% && notify-send -t 250 "Mic" "$(pactl get-source-volume @DEFAULT_SOURCE@ | grep -e "[0-9]*%" -o | head -1)"
    bindel = SHIFT, XF86AudioLowerVolume, exec, pactl set-source-volume @DEFAULT_SOURCE@ -5% && notify-send -t 250 "Mic" "$(pactl get-source-volume @DEFAULT_SOURCE@ | grep -e "[0-9]*%" -o | head -1)"

    # playback ctl
    bindel = ,XF86AudioPlay, exec, playerctl play-pause && notify-send -t 400 "Player" "Toggled Playback"
    bindel = ,XF86AudioNext, exec, playerctl next && notify-send -t 400 "Player" "Skipped to Next"
    bindel = ,XF86AudioPrev, exec, playerctl previous && notify-send -t 400 "Player" "Skipped to Previous"


# workspace ---
    # goto workspace
    bind = $mod, 1, workspace, 1
    bind = $mod, 2, workspace, 2
    bind = $mod, 3, workspace, 3
    bind = $mod, 4, workspace, 4
    bind = $mod, 5, workspace, 5
    bind = $mod, 6, workspace, 6
    bind = $mod, 7, workspace, 7
    bind = $mod, 8, workspace, 8
    bind = $mod, 9, workspace, 9
    bind = $mod, 0, workspace, 10
    # move to workspace
    bind = $mod SHIFT, 1, movetoworkspace, 1
    bind = $mod SHIFT, 2, movetoworkspace, 2
    bind = $mod SHIFT, 3, movetoworkspace, 3
    bind = $mod SHIFT, 4, movetoworkspace, 4
    bind = $mod SHIFT, 5, movetoworkspace, 5
    bind = $mod SHIFT, 6, movetoworkspace, 6
    bind = $mod SHIFT, 7, movetoworkspace, 7
    bind = $mod SHIFT, 8, movetoworkspace, 8
    bind = $mod SHIFT, 9, movetoworkspace, 9
    bind = $mod SHIFT, 0, movetoworkspace, 10
    # scroll through workspace
    bind = $mod, mouse_down, workspace, e+1
    bind = $mod, mouse_up, workspace, e-1
    # "minimize"
    bind = $mod, W, togglespecialworkspace, magic # go to minimize
    bind = $mod, S, movetoworkspace, special:magic # move window to minimize and ...
    bind = $mod, S, togglespecialworkspace, magic # ... instantly close it


# launch ---
    bind = $mod, Q, exec, $terminal
    bind = $mod, E, exec, $fileManager
    # clipboard manager
    bind = $mod, V, exec, alacritty --class clipse -e clipse
    # bitwarden window
    bind = $mod, B, exec, firefox --new-window 'moz-extension://b9709fa1-0666-42c7-82c5-87bf7eb52f3a/popup/index.html?uilocation=popout&singleActionPopout=auth_unlockExtension'
    # app launcher
    bind = SUPER, SUPER_L, exec, tofi-drun --drun-launch=true
    # app launcher but math
    bind = , PAUSE, exec, path='/home/$USER/.config/tofi/math-history' && in="$(cat $path | tofi --prompt-text="ï‡¬ " --require-match=false)" && python -c "exit('$in' == 'cls')" && (calc=$(python -c "print(''.join('$in'.split('=')[0]))") && (out="$(qalc -t "$calc")" && (echo $out && wl-copy "$out" && notify-send -u low -t 10000 "Math Result" "$out" && tmp=$(cat $path) && echo "$calc=$out" > $path && python -c "print('\n'+'\n'.join(filter(lambda line: line != '$calc=$out', '''$tmp'''.split('\\n'))))" >> $path))) || (echo "" > $path)
    # screenshot to save and copy
    bind = ,PRINT, exec, IMG="$HOME/Pictures/Screenshots/$(date +"%Y-%m-%d_%I:%M:%S_%p").png" && grim -t png -c -g "$(slurp)" $IMG && wl-copy < $IMG && notify-send -u low -t 5000 "Screenshot" "Screenshot saved to disk and copied to clipboard.\nLocation: $IMG"
    bind = $mod, L, exec, hyprlock
    # notification center
    bind = $mod, n, exec, swaync-client -t -sw

# exec ---
    bind = $mod, r, exec, waypaper --random && cd /home/floschy/.config/globalStyle && python update.py